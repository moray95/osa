<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper" style="min-height: 1233px;">
  <!-- Content Header (Page header) -->
  <div class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1 id="title" class="m-0">Spammer Details</h1>
        </div><!-- /.col -->
      </div><!-- /.row -->
    </div><!-- /.container-fluid -->
  </div>
  <!-- /.content-header -->

  <!-- Main content -->
  <div class="content">
    <div class="container-fluid">
      <div class="row">
        <!-- ./col -->
        <div class="col-lg">
          <!-- small card -->
          <div class="small-box bg-success">
            <div class="inner">
              <h3 id="today-count"></h3>
              <p>emails reported today</p>
            </div>
          </div>
        </div>
        <!-- ./col -->
        <div class="col-lg">
          <!-- small card -->
          <div class="small-box bg-success">
            <div class="inner">
              <h3 id="week-count"></h3>
              <p>emails reported in the last 7 days</p>
            </div>
          </div>
        </div>
        <!-- ./col -->
        <div class="col-lg">
          <!-- small card -->
          <div class="small-box bg-success">
            <div class="inner">
              <h3 id="month-count"></h3>
              <p>emails reported in the last 30 days</p>
            </div>
          </div>
        </div>
        <!-- ./col -->
        <div class="col-lg">
          <!-- small card -->
          <div class="small-box bg-warning">
            <div class="inner">
              <h3 id="total-count"></h3>
              <p>emails reported in total</p>
            </div>
          </div>
        </div>
        <!-- ./col -->
      </div>

      <div class="row">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Spams reported</h3>
          </div>
          <!-- /.card-header -->
          <div class="card-body">
            <div class="chart">
              <div class="chartjs-size-monitor">
                <div class="chartjs-size-monitor-expand">
                  <div class=""></div>
                </div>
                <div class="chartjs-size-monitor-shrink">
                  <div class=""></div>
                </div>
              </div>
              <canvas id="report-history-chart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 1732px;" width="1732" height="250" class="chartjs-render-monitor"></canvas>
            </div>
          </div>
          <!-- /.card-body -->
        </div>
      </div>

      <div class="row">
        <div class="card">
          <div class="card-header">
            <h3 class="card-title">Domains</h3>
          </div>
          <!-- /.card-header -->
          <div class="card-body p-0">
            <table class="table table-striped">
              <thead>
              </thead>
              <tbody id="domains-table-body">
              </tbody>
            </table>
          </div>
          <!-- /.card-body -->
        </div>
      </div>


    </div> <!-- /.container-fluid -->
    </div>
  </div>
  <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<script>
    const pathComponents = window.location.pathname.split('/');
    const spammer = pathComponents[pathComponents.length - 1];
    document.getElementById("title").innerText = `${spammer} Details`;

    async function updateStats() {
        const response = await fetch(`/api/stats/spammers/${spammer}/summary`);
        if (response.ok) {
            const body = await response.json();
            document.getElementById('today-count').innerText = body['today_reported'];
            document.getElementById('week-count').innerText = body['week_reported'];
            document.getElementById('month-count').innerText = body['month_reported'];
            document.getElementById('total-count').innerText = body['total_reported'];
            totalReportCount = body['total_reported'];

            const tableBody = document.getElementById("domains-table-body");
            tableBody.innerHTML = "";

            body['domains'].forEach((domain) => {
                const tr = document.createElement("tr");
                const td = document.createElement("td");
                td.innerText = domain;
                tr.appendChild(td);
                tableBody.appendChild(tr);
            });
        }
    }

    function createHistoricalChart() {
        const options = {
            maintainAspectRatio: false,
            responsive: true,
            legend: {
                display: false
            },
            scales: {
                xAxes: [{
                    gridLines: {
                        display: false,
                    }
                }],
                yAxes: [{
                    gridLines: {
                        display: false,
                    }
                }]
            }
        }

        const chartData = {
            labels: [],
            datasets: [
                {
                    label: 'Spams reported',
                    backgroundColor: 'rgba(60,141,188,0.9)',
                    borderColor: 'rgba(60,141,188,0.8)',
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: []
                }
            ]
        }
        const ctx = document.getElementById('report-history-chart').getContext('2d');

        return new Chart(ctx, {
            type: 'line',
            options: options,
            data: chartData
        });
    }

    const historicalChart = createHistoricalChart();

    async function updateHistoricalChart() {
        const response = await fetch(`/api/stats/reports/historical?spammer=${spammer}`);
        if (response.ok) {
            const body = await response.json();

            const labels = body.map((data) => data['date']);
            const values = body.map((data) => data['count']);

            historicalChart.data.labels = labels
            historicalChart.data.datasets[0].data = values
            historicalChart.update();
        }
    }

    function update() {
        updateStats()
            .then(updateHistoricalChart)
            .then(() => {
                setTimeout(update, 10 * 60 * 1000);
            })
    }

    update();
</script>
